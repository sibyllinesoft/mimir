# Nginx Configuration for Mimir-Lens Integrated System
# Production-ready reverse proxy and load balancer

# Global configuration
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Performance tuning
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # ==========================================================================
    # BASIC CONFIGURATION
    # ==========================================================================
    
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
                    
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '$request_time $upstream_response_time '
                       '$upstream_addr $upstream_status';

    access_log /var/log/nginx/access.log detailed;

    # ==========================================================================
    # PERFORMANCE SETTINGS
    # ==========================================================================
    
    # Basic optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 100m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # ==========================================================================
    # UPSTREAM DEFINITIONS
    # ==========================================================================
    
    # Mimir service upstream
    upstream mimir_backend {
        least_conn;
        server mimir:8000 max_fails=3 fail_timeout=30s weight=1;
        # Add more mimir instances for load balancing:
        # server mimir-2:8000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
    }
    
    # Lens service upstream
    upstream lens_backend {
        least_conn;
        server lens:3000 max_fails=3 fail_timeout=30s weight=1;
        # Add more lens instances for load balancing:
        # server lens-2:3000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
    }
    
    # Grafana upstream
    upstream grafana_backend {
        server grafana:3000 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }
    
    # Prometheus upstream
    upstream prometheus_backend {
        server prometheus:9090 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }
    
    # Jaeger upstream
    upstream jaeger_backend {
        server jaeger:16686 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    # ==========================================================================
    # RATE LIMITING
    # ==========================================================================
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=search:10m rate=200r/m;
    limit_req_zone $binary_remote_addr zone=monitoring:10m rate=50r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # ==========================================================================
    # SECURITY HEADERS
    # ==========================================================================
    
    # Security headers map
    map $sent_http_content_type $security_headers {
        ~^text/html    "X-Frame-Options: DENY; X-Content-Type-Options: nosniff; X-XSS-Protection: 1; mode=block";
        default        "X-Content-Type-Options: nosniff";
    }

    # ==========================================================================
    # MAIN SERVER BLOCK
    # ==========================================================================
    
    server {
        listen 80 default_server;
        server_name _;
        
        # Security
        add_header $security_headers always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Connection limits
        limit_conn perip 20;
        limit_conn perserver 1000;
        
        # Default location - health check
        location / {
            return 200 'Mimir-Lens Integration Gateway - OK\n';
            add_header Content-Type text/plain;
        }
        
        # ==========================================================================
        # MIMIR API ROUTES
        # ==========================================================================
        
        # Mimir MCP API
        location /api/mcp/ {
            limit_req zone=api burst=20 nodelay;
            
            # Proxy settings
            proxy_pass http://mimir_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }
        
        # Mimir health check
        location /health/mimir {
            proxy_pass http://mimir_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            access_log off;
        }
        
        # Mimir metrics
        location /metrics/mimir {
            limit_req zone=monitoring burst=10 nodelay;
            proxy_pass http://mimir_backend/metrics;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
        
        # ==========================================================================
        # LENS API ROUTES
        # ==========================================================================
        
        # Lens search API
        location /api/search/ {
            limit_req zone=search burst=50 nodelay;
            
            # Proxy settings
            proxy_pass http://lens_backend/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts (longer for search operations)
            proxy_connect_timeout 5s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # Disable buffering for streaming responses
            proxy_buffering off;
        }
        
        # Lens health check
        location /health/lens {
            proxy_pass http://lens_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            access_log off;
        }
        
        # Lens metrics
        location /metrics/lens {
            limit_req zone=monitoring burst=10 nodelay;
            proxy_pass http://lens_backend/metrics;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
        
        # ==========================================================================
        # MONITORING ROUTES
        # ==========================================================================
        
        # Grafana dashboard
        location /grafana/ {
            limit_req zone=monitoring burst=20 nodelay;
            
            proxy_pass http://grafana_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Grafana-specific headers
            proxy_set_header X-WEBAUTH-USER $remote_user;
            proxy_set_header Authorization $http_authorization;
            
            # Long timeout for dashboard loading
            proxy_read_timeout 300s;
        }
        
        # Prometheus UI
        location /prometheus/ {
            limit_req zone=monitoring burst=10 nodelay;
            
            proxy_pass http://prometheus_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Jaeger tracing UI
        location /jaeger/ {
            limit_req zone=monitoring burst=10 nodelay;
            
            proxy_pass http://jaeger_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # ==========================================================================
        # HEALTH AND STATUS ROUTES
        # ==========================================================================
        
        # Global health check
        location /health {
            access_log off;
            return 200 'OK';
            add_header Content-Type text/plain;
        }
        
        # Detailed status page
        location /status {
            limit_req zone=monitoring burst=5 nodelay;
            stub_status on;
            access_log off;
            
            # Restrict access (uncomment and configure for production)
            # allow 192.168.0.0/16;
            # allow 10.0.0.0/8;
            # deny all;
        }
        
        # Nginx metrics for Prometheus
        location /metrics/nginx {
            limit_req zone=monitoring burst=5 nodelay;
            stub_status on;
            access_log off;
            
            # Convert stub_status to Prometheus format (requires nginx-prometheus-exporter)
            # This location should be scraped by nginx-prometheus-exporter sidecar
        }
        
        # ==========================================================================
        # ERROR PAGES
        # ==========================================================================
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        # ==========================================================================
        # SECURITY ROUTES
        # ==========================================================================
        
        # Block access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # ==========================================================================
    # HTTPS SERVER BLOCK (for production with SSL)
    # ==========================================================================
    
    server {
        listen 443 ssl http2;
        server_name your-domain.com;  # Replace with actual domain
        
        # SSL configuration
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        
        # Include all the same location blocks as the HTTP server
        # (Copy all location blocks from above)
    }

    # ==========================================================================
    # MONITORING INCLUDE
    # ==========================================================================
    
    # Include additional monitoring configurations
    # include /etc/nginx/conf.d/monitoring.conf;
}