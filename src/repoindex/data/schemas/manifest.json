{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://mimir.dev/schemas/manifest.json",
  "title": "Index Manifest",
  "description": "Complete metadata and artifact registry for a repository index",
  "type": "object",
  "required": ["index_id", "repo", "config", "counts", "paths", "versions"],
  "properties": {
    "index_id": {
      "type": "string",
      "pattern": "^[0-9A-HJKMNP-TV-Z]{26}$",
      "description": "ULID identifier for this index"
    },
    "repo": {
      "type": "object",
      "required": ["root", "rev", "worktree_dirty"],
      "properties": {
        "root": {
          "type": "string",
          "description": "Absolute path to repository root"
        },
        "rev": {
          "type": "string",
          "pattern": "^[0-9a-f]{40}$",
          "description": "HEAD commit SHA"
        },
        "worktree_dirty": {
          "type": "boolean",
          "description": "Whether there are uncommitted changes"
        }
      }
    },
    "config": {
      "type": "object",
      "required": ["languages", "excludes", "context_lines", "features"],
      "properties": {
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "File extensions to process"
        },
        "excludes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Paths to ignore during indexing"
        },
        "context_lines": {
          "type": "integer",
          "minimum": 0,
          "maximum": 50,
          "description": "Number of context lines for snippets"
        },
        "features": {
          "type": "object",
          "required": ["vector", "symbol", "graph"],
          "properties": {
            "vector": {
              "type": "boolean",
              "description": "Enable vector search"
            },
            "symbol": {
              "type": "boolean", 
              "description": "Enable symbol search"
            },
            "graph": {
              "type": "boolean",
              "description": "Enable graph-based search"
            }
          }
        },
        "max_files_to_embed": {
          "type": ["integer", "null"],
          "minimum": 1,
          "description": "Maximum number of files to embed"
        },
        "imports_policy": {
          "type": "object",
          "properties": {
            "types_for_first_order": {
              "type": "boolean"
            },
            "code_for_direct_imports": {
              "type": "boolean"
            }
          }
        },
        "watch_mode": {
          "type": "boolean",
          "description": "Enable file system watching"
        }
      }
    },
    "counts": {
      "type": "object",
      "required": ["files_total", "files_indexed", "symbols_defs", "symbols_refs", "vectors"],
      "properties": {
        "files_total": {
          "type": "integer",
          "minimum": 0
        },
        "files_indexed": {
          "type": "integer", 
          "minimum": 0
        },
        "symbols_defs": {
          "type": "integer",
          "minimum": 0
        },
        "symbols_refs": {
          "type": "integer",
          "minimum": 0
        },
        "vectors": {
          "type": "integer",
          "minimum": 0
        },
        "chunks": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "paths": {
      "type": "object",
      "required": ["repomap", "serena_graph", "leann_index", "vectors", "snippets", "vendor_types", "vendor_sources", "bundle"],
      "properties": {
        "repomap": {
          "type": "string"
        },
        "serena_graph": {
          "type": "string"
        },
        "leann_index": {
          "type": "string"
        },
        "vectors": {
          "type": "string"
        },
        "snippets": {
          "type": "string"
        },
        "vendor_types": {
          "type": "string"
        },
        "vendor_sources": {
          "type": "string"
        },
        "bundle": {
          "type": "string"
        }
      }
    },
    "versions": {
      "type": "object",
      "required": ["mimir"],
      "properties": {
        "repomapper": {
          "type": "string"
        },
        "serena": {
          "type": "string"
        },
        "leann": {
          "type": "string"
        },
        "tsserver": {
          "type": "string"
        },
        "mimir": {
          "type": "string"
        }
      }
    },
    "created_at": {
      "type": "string",
      "format": "date-time"
    },
    "updated_at": {
      "type": "string", 
      "format": "date-time"
    }
  }
}